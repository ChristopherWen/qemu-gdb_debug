	ldr x0, =0x8
	str x0, [sp]
	ldr x7, =0x7
	ldr x6, =0x6
	mov x5, #0x5
	mov x4, #0x4	
	mov x3, #0x3	
	mov x2, #0x2	
	mov x1, #0x1	
	mov x0, #0x0
	
#如果是以一下这种形式：
	mov x0, #0x1
	mov x1, #0x1
	mov x2, #0x0
	mov x3, #0x0
	mov x4, #0x0
	mov x5, #0x0
	ldr x6, =0x0
	ldr x7, =0x0
	ldr x0, =0x8
	str x0, [sp]
	那么由于倒数第二条语句ldr x0, =0x8重写了寄存器x0的值，
	所以在传参的时候，x0的值由0x1变成了0x8，因此传参的时候
	不会像我们一开始设置的 mov x0, #0x1 一样，而是出现重写
	参数值的人为BUG。


	mov x0, #0x1
	mov x1, #0x1
	mov x2, #0x0
	mov x3, #0x0
	mov x4, #0x0
	mov x5, #0x0
	ldr x6, =0x0
	ldr x7, =0x0
	ldr x9, =0x8
	str x9, [sp]
	
	#mov x8, #0x14
	#str x8, [sp, #-4]

	#str x8, [sp, #24]	

	.extern main
	bl main


	#adr x5, cpu_data
	#ldr x6, [x5]
	#adr x3, cpu
	#ldr x4, [x3]
	#ands x1, x1, x0

	#stp x29, x30, [sp, #-40]!
	#mov x29, sp

	#mov x0, x1
	#这句应该会报错
	#str x30, [sp, #-4]!	
	#ldr x6, =0x0
	#ldr x8, =0x1
	#mov x0, x6
	#mov x1, x8
